<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<!--mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm-->
<!-- mapper 태그 선언 -->
<!--mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm-->
	<!-- namespace 속성값으로 [DAO 인터페이스명]이 오며 -->
	<!-- [DAO 인터페이스] 메소드명과 동일한 id 값을 소유한 태그를 내포하고 있다. -->
<!--mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm-->
<mapper namespace="com.naver.erp.QstnDAO">

	<!--***********************************-->
	<!-- 게시판 글 목록 구하는 조건문 설정 -->
	<!--***********************************-->
	<sql id="qstnWhere">
			<!-- ========================================================= -->
			<!-- 만약 [키워드 1]이 있거나 [키워드2]가 있으면 ~~~~~~~~~~~~~~-->
			<!-- ========================================================= -->
			<!-- QstnSearchDTO 객체 안의 keyword1 속성변수 안의 데이터를 ~-->
			<!-- mybatis 문법으로 ${keyword1} 형식으로 표현한다 ~~~~~~~~~~~-->
			<!-- $를 붙여 꺼내면 ' 없이 원본대로 그냥 나오고 ~~~~~~~~~~~~~~-->
			<!-- #를 붙여 꺼내면 문자열일 경우 '가 자동으로 붙어 나온다~~~~-->
			<!-- 현재 아래 SQL 구문에서는 ' 없이 나와야 하므로 $을 사용한다-->
		  <if test="(keyword1!=null and keyword1.length()>0) or (keyword2!=null and keyword2.length()>0)">
	         and
	      </if>
			<!-- ========================================================= -->
			<!-- 만약 [키워드1]이 있으면 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
			<!-- ========================================================= -->
	      <if test="keyword1!=null and keyword1.length()>0">
	         (
	            (upper(subject) like upper('%${keyword1}%'))
	            or (upper(u_no) like upper('%${keyword1}%'))
	            or (upper(content) like upper('%${keyword1}%'))
	            or (upper(to_char(qna_date,'YYYY-MM-DD')) like upper('%${keyword1}%'))
	          <!--  or (upper(email) like upper('%${keyword1}%')) -->
	         )
	      </if>
	      
			<!-- ========================================================== -->
			<!-- 만약 [키워드 1]이 있고 [키워드2]가 있으면 ~~~~~~~~~~~~~~~~~-->
			<!-- QstnSearchDTO 객체 안의 orAnd 라는 속성변수 안의 데이터를 -->
			<!-- 싱글쿼드 없이 그냥 꺼내서 출력하라~~~~~~~~~~~~~~~~~~~~~~~~ -->
			<!-- ========================================================== -->
	      <if test="(keyword1!=null and keyword1.length()>0) and (keyword2!=null and keyword2.length()>0)">
	         <if test="orAnd!=null and orAnd.length()>0">
	            ${orAnd}
	         </if>
	      </if>
			<!-- ========================================================= -->
			<!-- 만약 [키워드2]가 있으면 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
			<!-- ========================================================= -->
	      <if test="keyword2!=null and keyword2.length()>0">
	         (
	            (upper(subject) like upper('%${keyword2}%'))
	            or (upper(u_no) like upper('%${keyword2}%'))
	            or (upper(content) like upper('%${keyword2}%'))
	            or (upper(to_char(qna_date,'YYYY-MM-DD')) like upper('%${keyword2}%'))
	          <!--   or (upper(email) like upper('%${keyword2}%'))  -->
	         )
	      </if>
			
			
			
			<!--=====================================================================================-->
			<!-- 만약 BoarSearchDTO 객체의 속성변수 date가 null이 아니고 배열변수의 개수가 0보다 크면-->
			<!-- [주의] 체크박스 값이 저장되는 배열변수는 배열 객체는 있되 ~~~~~~~~~~~~~~~~~~~~~~~~~~-->
			<!-- 배열변수가 없을 수 있으므로 배열변수의 개수도 0보다 큰지 확인한다 ~~~~~~~~~~~~~~~~~~-->
			<!--=====================================================================================-->
			<if test="date!=null and date.length>0">
				and
				<!--=========================================================================-->
				<!-- [mybatis foreach 반복문]의 속성 설명 ===================================-->
				<!--=========================================================================-->
				<!-- collection = "배열/List 객체의 속성변수명" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
				<!-- item = "배열 또는 List 객체 안의 데이터를 저장할 지역변수명" ~~~~~~~~~~~~~-->
				<!-- open = "반복문 시작 전에 삽입할 문자" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
				<!-- close = "반복문 끝난 후에 삽입할 문자" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
				<!-- separator = "반복문에 의해 표현되는 쿼리문 사이사이에 삽입될 쿼리 일부분" -->
				<!-- index = "반복문 안에서 사용할 인덱스 번호 저장 변수명" ~~~~~~~~~~~~~~~~~~~-->
				
				<foreach collection="date" item="x" open="(" separator=" or " close=")">
					<if test="x.equals('오늘')">
						to_char(sysdate,'yyyymmdd') = to_char(qna_date,'yyyymmdd')
					</if>
					<if test="x.equals('어제')">
						to_char(sysdate-1,'yyyymmdd') = to_char(qna_date,'yyyymmdd')
					</if>
					<if test="x.equals('이번달')">
						to_char(sysdate,'yyyymm') = to_char(qna_date,'yyyymm')
					</if>
					<if test="x.equals('이번달이외')">
						to_char(sysdate,'yyyymm') != to_char(qna_date,'yyyymm')
					</if>
				</foreach>
			</if>
			
			<if test="readCnt!=null and readCnt.length>0">
				and
				<foreach collection="readCnt" item="x" open="(" separator=" or " close=")">
					<if test="x.equals('조회수100이상')">
						readcount &gt;= 100
					</if>
				</foreach>
			</if>
	</sql>

	<!--**************************************************************************-->
	<!-- 게시판 검색하는 select 문을 내포한 select 태그 선언 -->
	<!--**************************************************************************-->
	<select id="getQstn" parameterType="com.naver.erp.QstnSearchDTO" resultType="java.util.HashMap">
		select * from(select zzz.*, rownum RNUM from(
		
			select
				qna_no||'' 		as "qna_no"
				,subject 		as "subject"
				,(select user_id from user_info u where u.u_no = q.u_no)  		    as "user_id"
				,to_char(qna_date,'YYYY-MM-DD') as "qna_date" 
				,readcount||''  as "readcount"
				,qna_pwd 		as "qna_pwd"
				,content 		as "content"
				<!-- ,email 			as "email" -->
				,group_no||'' 	as "group_no"
				,print_no||'' 	as "print_no"
				,print_level||'' as "print_level"
				
			from qna q
			where 1=1
			
			<!--=========================================================-->
			<!-- <sql id="qstnWhere"> 태그 안에 삽입된 SQL 구문 삽입하기-->
			<!--=========================================================-->
			<include refid="qstnWhere"/>
			
			
			
			order by group_no desc, print_no asc
			
		) zzz) where 
		
		   <!-- <![CDATA[ 안의 꺾음새는 모두 부등호로 인식해서 주석 불가능 -->
		   <![CDATA[ 
				RNUM >= ${selectPageNo * rowCntPerPage - rowCntPerPage + 1}
				and RNUM <= ${selectPageNo * rowCntPerPage}
		   ]]>
			
	</select>
	
	<!--*************************************************************-->
	<!-- 게시판 글 목록 총 개수 구하는  select 태그 선언~~~~~~~~~~~~~-->
	<!--*************************************************************-->
	<select id="getQstnAllCnt" parameterType="com.naver.erp.QstnSearchDTO" resultType="int">
		select 
			count(*) 
		from qna	
				where 1=1
				
			<!--=========================================================-->
			<!-- <sql id="qstnWhere"> 태그 안에 삽입된 SQL 구문 삽입하기-->
			<!--=========================================================-->
			<include refid="qstnWhere"/>
	</select>
	
	
	<!--**************************************************************-->
	<!-- 게시판 기본 정보 입력하는 insert 문을 내포한 insert 태그 선언-->
	<!--**************************************************************-->
	<insert id='insertQstn' parameterType="com.naver.erp.QstnDTO">
         insert into qna(
            qna_no
            ,subject       
            ,u_no      
            ,readcount  
            ,qna_pwd    
            ,content           
           <!--  ,email   -->        
            ,group_no
            ,print_no
            ,print_level 
         ) values (
            (select nvl(max(qna_no),0)+1 from qna)
            ,#{subject}
            ,(select u_no from user_info where user_id=#{user_id})
            ,#{readcount}
            ,#{qna_pwd}
            ,#{content}
             <!--,#{email}--> 
            <if test="qna_no==0">
               ,(select nvl(max(qna_no),0)+1 from qna)
               ,0
               ,0
            </if>
            <if test="qna_no>0">
               ,(select group_no from qna where qna_no=#{qna_no})
               ,(select print_no+1 from qna where qna_no=#{qna_no})
               ,(select print_level+1 from qna where qna_no=#{qna_no})
               <!--  ,(select count(*) from user_info where user_id=#{user_id} and manager='t';)-->
            </if> 
         )
      </insert>
	   
	   
		<!--*************************************************************************************************-->
		<!-- 게시판 글 출력 번호 수정하는 update 문을 내포한 update 선언-->
		<!--*************************************************************************************************-->
		<update id="updatePrintNo" parameterType="com.naver.erp.QstnDTO">
			update qna set print_no = print_no+1
			where
					group_no=(select group_no from qna where qna_no = #{qna_no})
   				and print_no&gt;(select print_no from qna where qna_no = #{qna_no})
		</update> 
		
		
		<!--**************************************************************-->
		<!-- 게시판 1개 글 검색하는 select문을 내포한 select 태그 선언-->
		<!--**************************************************************-->
			<!-- 만약 parameterType이 int,String,double 같이 한 개일 경우 -->
			<!-- SQL 구문 안에서 표현하는 방법은 #{맘대로스펠링} 또는 ${맘대로스펠링}이다 -->
		<select id="getQstnDTO" parameterType="int" resultType="com.naver.erp.QstnDTO">
			select
				qna_no 			"qna_no"
				,subject 		"subject"
				,(select user_id from user_info u where u.u_no = q.u_no) 		"user_id"
				,qna_date 		"qna_date" 
				,readcount   	"readcount"
				,qna_pwd 		"qna_pwd"
				,content 		"content"
				<!-- ,email 			"email" -->
				,group_no 	 	"group_no"
				,print_no 	 	"print_no"
				,print_level  	"print_level"
			from qna q
			where qna_no=#{qna_no}
		</select>
		
		<!--**************************************************************-->
		<!--[게시판 글 조회수 증가]하는 update 태그 선언~~~~~~~~~~~~~~~~~~-->
		<!--**************************************************************-->
		<update id="updateReadcount" parameterType="int">
			update qna set readcount = readcount +1
			where qna_no=#{qna_no}
		</update>
		
		
		<!--**************************************************************-->
		<!--[게시판 수정 후 수정행의 적용 개수를 리턴하는 메소드 선언~~~~~-->
		<!--**************************************************************-->
		<update id="updateQstn" parameterType="com.naver.erp.QstnDTO">
         update
            qna
         set
            subject = #{subject}
            , u_no = (select u_no from user_info where user_id=#{user_id})
            , content = #{content}
            <!-- , email = #{email} -->
         where
            qna_no=${qna_no} and qna_pwd=#{qna_pwd}
      </update>
		
		<!--**************************************************************-->
		<!--삭제/수정할 게시판의 존재 개수를 리턴하는 select 선언~~~~~~~~~-->
		<!--**************************************************************-->
		<select id="getQstnCnt" parameterType="com.naver.erp.QstnDTO" resultType="int">
			select count(*) from qna where qna_no=${qna_no}
		</select>
		
		<!--**************************************************************-->
		<!--삭제/수정할 게시판의 암호 존재 개수를 리턴하는 select 선언~~~~-->
		<!--**************************************************************-->
		<select id="getPwdCnt" parameterType="com.naver.erp.QstnDTO" resultType="int">
			select count(*) from qna where qna_no=${qna_no} and qna_pwd=#{qna_pwd}
		</select>
		
		<!--***************************************************************-->
		<!--게시판 삭제 명령한 후 삭제 적용행의 개수를 리턴하는 delete 선언-->
		<!--***************************************************************-->
		<delete id="deleteQstn" parameterType="com.naver.erp.QstnDTO">
			delete from qna where qna_no=${qna_no} and qna_pwd=#{qna_pwd}
		</delete>
		
		
		<!--***************************************************************-->
		<!--삭제할 게시판의 아들 글 존재 개수를 리턴하는 select 선언-->
		<!--***************************************************************-->
		<select id="getSonCnt" parameterType="com.naver.erp.QstnDTO" resultType="int">
			select count(*) from qna
			where 
					group_no=(select group_no from qna where qna_no = #{qna_no})
   				and print_no=(select print_no+1 from qna where qna_no = #{qna_no})
    			and print_level=(select print_level+1 from qna where qna_no = #{qna_no})
		</select>
		
		<!--*************************************************************************************************-->
		<!--삭제될 게시판 이후 글의 출력 순서번호를 1씩 감소시킨 후 수정 적용행의 개수를 리턴하는 update 선언-->
		<!--*************************************************************************************************-->
		<update id="downPrintNo" parameterType="com.naver.erp.QstnDTO">
			update qna set print_no = print_no-1
			where
					group_no=(select group_no from qna where qna_no = #{qna_no})
   				and print_no&gt;(select print_no from qna where qna_no = #{qna_no})
		</update>
		
		<!--*************************************************************************************************-->
		<!--관리자 계정 개수 리턴하는 select 선언-->
		<!--*************************************************************************************************-->
		<select id='masterQstn' parameterType="com.naver.erp.QstnDTO" resultType="int">
	      select count(*) from user_info where user_id =#{user_id} and manager='t'
	    </select>
	    
	    
	   
	   
	   
	   
	   
	   
	   
	   
	   <!-- <select id='writer' parameterType="com.naver.erp.QstnDTO" resultType="String">
	      select (select u.user_id from user_info u where u.u_no=q.u_no) "writer" from qna q 
	    </select> -->
	    
	   
	   
	   
	   <select id='writer' parameterType="com.naver.erp.QstnDTO" resultType="String">
	      select 'master2' "writer" from dual  
	    </select>
	
  <!--*************************************************************************************************-->
	   <!-- 로그인후 홈페이지에서 내가 쓴글만 QSTN 리스트 가져오기 -->
	   	<select id="getMyQstnList" parameterType="com.naver.erp.MyQstnSearchDTO" resultType="java.util.HashMap">
		select * from(select zzz.*, rownum RNUM from(
			select
				q.qna_no||'' 		as "qna_no"
   				, q.subject                               "subject"
    			, to_char(q.qna_date, 'yyyy-mm-dd')     "qna_date"
    			, (select count(q.print_level) from qna q
        			where q.print_level>q.group_no)     "reply_cnt"
				,u.user_id       as "user_id" 		
				,q.readcount||''  as "readcount"
				,qna_pwd 		as "qna_pwd"
				,content 		as "content"
				,group_no||'' 	as "group_no"
				,print_no||'' 	as "print_no"
				,print_level||'' as "print_level"
        		
			from qna q, user_info u
			where 1=1
    			and u.u_no=q.u_no and u.u_no=#{u_no}
				order by q.qna_date desc 
		) zzz ) where 
			<![CDATA[
				RNUM>= ${selectPageNo*rowCntPerPage-rowCntPerPage+1}
				and RNUM<= ${selectPageNo*rowCntPerPage}
			]]>
		</select>
		
		
		<!--*************************************************************-->
		<!-- 게시판 글 목록 총 개수 구하는  select 태그 선언~~~~~~~~~~~~~-->
		<!--*************************************************************-->
		<select id="getMyQstnAllCnt" parameterType="com.naver.erp.MyQstnSearchDTO" resultType="int">
			select 
				count(*) 
			from qna q, user_info u	
			where 1=1
				and u.u_no=q.u_no and u.u_no=#{u_no}
		</select>
		
</mapper>	
	
	
<!-- 
	한 화면에 보여줄 행의 개수 => rowCntPerPage
	선택한 페이지 번호		   => selectPageNo
	시작행의 번호			   => beginRowNo
	끝 행의 번호 			   => endRowNo
	
[문]rowCntPerPage가 10이고, selectPageNo가 1이면 beginRowNo? endRowNo?

beginRowNo = selectPageNo * rowCntPerPage - rowCntPerPage + 1;
endRowNo = selectPageNo * rowCntPerPage;
===================================
endRowNo = selectPageNo * rowCntPerPage;
beginRowNo = endRowNo - rowCntPerPage +1;
 -->