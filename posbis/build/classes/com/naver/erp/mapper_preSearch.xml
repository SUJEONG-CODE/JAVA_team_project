<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

	
	


<mapper namespace="com.naver.erp.PreSearchDAO">

	<sql id="preSearchWhere">
	select business_no, month_sales, business_type, addr_dong,
					  SUBSTR(XMLAgg(XMLElement(x,',',sub_category_name) order by sub_category_name ).EXTRACT('//text()'),2) best_menu_type 
					  , RANK() OVER (ORDER BY month_sales desc)   RANKING from
					(select
					 sm.business_no
					  ,sm.month_sales
					  ,sm.business_type
					  ,sm.addr_dong
					  ,best.sub_category_name
				from
				 (select distinct best_no.business_no, cmc.sub_category_name
					 from ( SELECT business_no
					               , menu_no
					               , SUM(sales_count) AS SALES_SUM
					               , MAX( SUM(sales_count) ) OVER(partition by business_no) AS MAX_SALES_SUM
					        FROM sales s
					        where extract(month from s.sales_date)=extract(month from sysdate) -1
					        GROUP BY business_no, menu_no
					        ) best_no
					        , menu m
					        , code_menu_category cmc
				 where  best_no.menu_no=m.menu_no
				    and m.menu_category_code=cmc.menu_category_code
				    and sales_sum= max_sales_sum  ) best
				, (select
				    s.business_no
				    , sum(s.sales_count*m.menu_price)   as "MONTH_SALES"
				    , (select cbt.business_type_name2
				        from code_business_type cbt, business_info bi
				        where cbt.business_type_code=bi.business_type_code
				            and s.business_no=bi.business_no)    as "BUSINESS_TYPE"
				    , (select a.addr_dong
				        from addr a, business_info bi
				        where bi.addr_no=a.addr_no
				            and bi.business_no=s.business_no) as "ADDR_DONG"
				from sales s , menu m
				where s.menu_no=m.menu_no
				    and  extract(month from s.sales_date)=extract(month from sysdate) -1
				group by s.business_no
				order by sum(s.sales_count*m.menu_price) desc ) sm
				where best.business_no = sm.business_no )  result
				where  1=1
		    	<if test="addr_gu1!=null and addr_gu1.length()>0">
				    and (select a.addr_gu
				            from addr a, business_info bi
				            where bi.addr_no=a.addr_no
				                and bi.business_no=result.business_no)  in ( #{addr_gu1} <if test="addr_gu2!=null and addr_gu2.length()>0"> , #{addr_gu2} </if> )
				</if>
				<if test="business_type_name1!=null and business_type_name1.length()>0">
			    and (select cbt.business_type_name1
			            from code_business_type cbt, business_info bi
			            where cbt.business_type_code=bi.business_type_code
			                and bi.business_no=result.business_no) = #{business_type_name1}
			  	</if>
			  	<if test="(business_type_name1!=null and business_type_name1.length()>0) and (business_type_name2!=null and business_type_name2.length()>0)">
				    and (select cbt.business_type_name2
				            from code_business_type cbt, business_info bi
				            where cbt.business_type_code=bi.business_type_code
				                and bi.business_no=result.business_no) = #{business_type_name2}
       	       	</if>
				group by business_no , month_sales, business_type, addr_dong
				 order by month_sales desc
	
	</sql>





	<!-- ===== [프리미엄 검색 리스트] =================================================================-->	
	<select id="getPreResultList" parameterType="com.naver.erp.PreSearchDTO" resultType="java.util.HashMap">
			select * from(
			select b.* , rownum PAGINGRNUM from(
				<include refid="preSearchWhere"/>
				) b order by ${sort})
			
					where pagingrnum &gt; =${selectPageNo*rowCntPerPage-rowCntPerPage+1}
							 and pagingrnum &lt; =${selectPageNo*rowCntPerPage}
							
				
	</select>
	

	<!--====[프리미엄 검색 개수]===========================================================================-->	
	<select id="getPreResultAllCnt" parameterType="com.naver.erp.PreSearchDTO" resultType="int">
		select count(*)
		from (
		 	<include refid="preSearchWhere"/>)
	</select>
	
	
	<select id="getBusinessInfoList" parameterType="int" resultType="java.util.HashMap">
		select 
			business_no   as "business_no"
			, business_name   as "business_name"
		from business_info
		where u_no=#{u_no}
	</select>
		

<!-- =====[구 리스트] 얻기====================================================================== -->		
	<!-- [select / addrGu1]얻기 -->
	<select id="getAddrGu1List"  resultType="java.util.HashMap">
		select
  				 distinct(addr_gu)  as "addr_gu1"
		from addr
		order by addr_gu
		
	</select>
		

<!-- ====[UserNo] 얻기============================================================================ -->		
		
   <select id='getUserNo' parameterType="String" resultType="int">   
      select u_no from user_info where user_id=#{user_id}
   </select>
   

	<!-- =====[BusinessNoList] 얻기========================================================================= -->

	<select id='getBusinessNoList' parameterType="int"
		resultType="java.util.HashMap">
		select
		business_no as "business_no"
		, business_name as "business_name"

		from business_info
		where
		1=1
		and u_no=#{u_no}
		

	</select>
	

<!-- =====[business type 대분류 리스트] 얻기========================================================================= -->	
	<select id="getBusinessTypeName1List"  resultType="java.util.HashMap">
		select
  				 distinct(business_type_name1)  as "business_type_name1"
		from code_business_type
		order by business_type_name1
	</select>
	

<!-- =====[business type 소분류 리스트] 얻기========================================================================= -->	
	<select id="getBusinessTypeName2" parameterType="String" resultType="String">
		select
  				 business_type_name2  as "business_type_name2"
		from code_business_type
		where 1=1
				and business_type_name1 = #{business_type_name1}
		order by business_type_name2
	</select>
	
	
<!-- =====[addr_gu2 리스트] 얻기========================================================================= -->	
	<select id="getAddrGu2" parameterType="String" resultType="String">
		select
  				 distinct addr_gu  as "addr_gu2"
		from addr
		where 1=1
				and addr_gu != #{addr_gu1}
		order by addr_gu
	</select>
	
	
	 
	
	
</mapper>	
	